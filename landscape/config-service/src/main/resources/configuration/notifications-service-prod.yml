server:
  port: 8086
spring:
  application:
    name: notifications-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_SERVICE_URL}/realms/${KEYCLOAK_REALM}
          jwk-set-uri: ${KEYCLOAK_SERVICE_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs
        registration:
          keycloak:
            client-id: notifications-service
            authorization-grant-type: authorization_code
            scope: openid
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    driverClassName: com.mysql.cj.jdbc.Driver
    password: ${MYSQL_ROOT_PASSWORD}
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/hayat?useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: root
  hibernate:
    connection:
      charSet: UTF-8
      characterEncoding: utf8
      useUnicode: true
  jpa:
    generate-ddl: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
        format_sql: false
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    queue:
      notifications: notifications
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL}/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
      show-components: always
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        all: true
        http.server.requests: true
  tracing:
    sampling:
      probability: 1.0
  prometheus:
    metrics:
      export:
        step: 10s

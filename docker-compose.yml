version: "3.8"

services:

  gateway:
    container_name: "hayat_gateway_service"
    image: hayat_gateway_service:latest
    restart: always
    build:
      context: ./landscape/gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - discovery-service
    env_file:
      - .env
    environment:
      - EUREKA_URL=http://discovery-service:8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONFIG_SERVICE_URI=${CONFIG_SERVICE_URI}
      - AUTHORIZATION_SERVICE_URL=${AUTHORIZATION_SERVICE_URL}
      - DONATIONS_SERVICE_URL=${DONATIONS_SERVICE_URL}
      - NEEDS_SERVICE_URL=${NEEDS_SERVICE_URL}
      - SHARED_SERVICE_URL=${SHARED_SERVICE_URL}
      - ACTIVE_PROFILE=${ACTIVE_PROFILE}

  config-service:
    container_name: "hayat_config_service"
    image: hayat_config_service:latest
    restart: always
    build:
      context: ./landscape/config-service
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - EUREKA_URL=http://discovery-service:8761
    ports:
      - "8111:8111"
    depends_on:
      discovery-service:
        condition: service_started

  discovery-service:
    container_name: "hayat_discovery_service"
    image: hayat_discovery_service:latest
    restart: always
    build:
      context: ./landscape/discovery-service
      dockerfile: Dockerfile
    environment:
      - EUREKA_HOST=discovery-service
      - EUREKA_URL=http://discovery-service:8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONFIG_SERVICE_URI=http://config-service:8111
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DB=${MONGO_DB}
      - MONGO_ROOT_USER=${MONGO_ROOT_USER}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    ports:
      - "8761:8761"

  authorization-service:
    container_name: "hayat_authorization_service"
    image: hayat_authorization_service:latest
    build:
      context: ./landscape/authorization
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - CONFIG_SERVICE_URI=http://config-service:8111
      - CONFIG_SERVICE_ENABLED=true
      - ACTIVE_PROFILE=prod
      - EUREKA_URL=http://discovery-service:8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SMS_ENV=${SMS_ENV}
      - SMS_USERNAME=${SMS_USERNAME}
      - SMS_PASSWORD=${SMS_PASSWORD}
      - SMS_SENDER=${SMS_SENDER}
      - SMS_LANGUAGE=${SMS_LANGUAGE}
      - KEYCLOAK_SERVICE_URL=${KEYCLOAK_SERVICE_URL}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_AUTHORIZATION_CLIENT_ID=${KEYCLOAK_AUTHORIZATION_CLIENT_ID}
      - KEYCLOAK_AUTHORIZATION_CLIENT_SECRET=${KEYCLOAK_AUTHORIZATION_CLIENT_SECRET}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "8083:8083"
    depends_on:
      discovery-service:
        condition: service_started
      config-service:
        condition: service_started
      redis:
        condition: service_started

  donations-service:
    container_name: "hayat_donations_service"
    image: hayat_donations_service:latest
    build:
      context: ./services/donations
      dockerfile: Dockerfile
    restart: on-failure
    environment:
      - EUREKA_URL=http://discovery-service:8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONFIG_SERVICE_ENABLED=true
      - ACTIVE_PROFILE=prod
      - CONFIG_SERVICE_URI=http://config-service:8111
      - KEYCLOAK_SERVICE_URL=${KEYCLOAK_SERVICE_URL}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    ports:
      - "8084:8084"
    depends_on:
      discovery-service:
        condition: service_started
      config-service:
        condition: service_started
      redis:
        condition: service_started

  needs-service:
    container_name: "hayat_needs_service"
    image: hayat_needs_service:latest
    build:
      context: ./services/needs
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - .env
    environment:
      - EUREKA_URL=http://discovery-service:8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONFIG_SERVICE_URI=http://config-service:8111
      - CONFIG_SERVICE_ENABLED=true
      - ACTIVE_PROFILE=prod
      - KEYCLOAK_SERVICE_URL=${KEYCLOAK_SERVICE_URL}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DB=${MONGO_DB}
      - MONGO_ROOT_USER=${MONGO_ROOT_USER}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    ports:
      - "8082:8082"
    depends_on:
      discovery-service:
        condition: service_started
      config-service:
        condition: service_started
      redis:
        condition: service_started
      mongo:
        condition: service_started

  shared-service:
    container_name: "hayat_shared_service"
    image: hayat_shared_service:latest
    build:
      context: ./services/shared
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - .env
    environment:
      - EUREKA_URL=http://discovery-service:8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONFIG_SERVICE_URI=http://config-service:8111
      - CONFIG_SERVICE_ENABLED=true
      - ACTIVE_PROFILE=prod
      - KEYCLOAK_SERVICE_URL=${KEYCLOAK_SERVICE_URL}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "8085:8085"
    depends_on:
      discovery-service:
        condition: service_started
      config-service:
        condition: service_started
      redis:
        condition: service_started

  database-service:
    container_name: "hayat_database_service"
    image: hayat_database_service:latest
    build:
      context: ./landscape/database-migration
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "8086:8086"

  redis:
    container_name: "hayat_redis"
    image: redis:latest
    restart: always
    command: redis-server --appendonly yes --replica-read-only no
    ports:
      - "6379:6379"

  db:
    image: mysql:8.0
    container_name: "hayat_mysql"
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - hayat_db:/var/lib/mysql
    ports:
      - ${DB_PORT}:3306

  postgres:
    image: postgres:latest
    container_name: "hayat_postgres"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - hayat_postgres:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:5432

  mongo:
    image: mongo:latest
    container_name: "hayat_mongodb"
    env_file:
      - .env
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
#      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
#      - MONGO_INITDB_DATABASE=${MONGO_DB}
    volumes:
      - hayat_mongodb:/data/db
    ports:
      - ${MONGO_PORT}:27017

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: "hayat_keycloak"
    env_file:
      - .env
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KEYCLOAK_IMPORT=./platform/keycloak/keycloak.json
      - KC_DB=${POSTGRES_DB}
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
      - KC_DB_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      - KC_HTTPS_CERTIFICATE_FILE=/opt/keycloak/conf/server.crt.pem
      - KC_HTTPS_CERTIFICATE_KEY_FILE=/opt/keycloak/conf/server.key.pem
    command:
      - "start-dev"
      - "--http-port=8181"
    #      - "--https-port=8443"
    #      - "--https-certificate-file=/opt/keycloak/conf/server.crt.pem"
    volumes:
      - hayat_keycloak:/opt/keycloak/data
      - ./server.crt.pem:/opt/keycloak/conf/server.crt.pem
      - ./server.key.pem:/opt/keycloak/conf/server.key.pem
      - ./platform/keycloak:/opt/keycloak/data/import
    depends_on:
      - postgres
    ports:
      - "8181:8181"
      - "8444:8443"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD}
    volumes:
      - ./platform/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./platform/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./platform/grafana/grafana.ini:/etc/grafana/grafana.ini

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./platform/prometheus:/etc/prometheus

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - ${RABBITMQ_PORT}:5672
      - ${RABBITMQ_MANAGEMENT_PORT}:15672

volumes:
  hayat_db:
  hayat_keycloak:
  hayat_mongodb:
  hayat_postgres:
networks:
  hayat_internal:
    internal: true
  host:
    external: true

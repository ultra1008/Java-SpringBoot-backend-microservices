version: "3.8"

services:
  gateway:
    container_name: "hayat_gateway_service"
    image: hayat_gateway_service:latest
    build:
      context: ./landscape/gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8443"
    depends_on:
      - discovery-service
    env_file:
      - .env
    environment:
      - EUREKA_URL=http://discovery-service:8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONFIG_SERVICE_URI=${CONFIG_SERVICE_URI}
      - AUTHORIZATION_SERVICE_URL=${AUTHORIZATION_SERVICE_URL}
      - DONATIONS_SERVICE_URL=${DONATIONS_SERVICE_URL}
      - NEEDS_SERVICE_URL=${NEEDS_SERVICE_URL}
      - SHARED_SERVICE_URL=${SHARED_SERVICE_URL}
      - ACTIVE_PROFILE=${ACTIVE_PROFILE}
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s

  config-service:
    container_name: "hayat_config_service"
    image: hayat_config_service:latest
    build:
      context: ./landscape/config-service
      dockerfile: Dockerfile
    environment:
      - EUREKA_URL=http://discovery-service:8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONFIG_SERVICE_URI=http://config-service:8111
    ports:
      - "8111:8111"
    depends_on:
      - discovery-service
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s

  discovery-service:
    container_name: "hayat_discovery_service"
    image: hayat_discovery_service:latest
    build:
      context: ./landscape/discovery-service
      dockerfile: Dockerfile
    environment:
      - EUREKA_HOST=discovery-service
      - EUREKA_URL=http://discovery-service:8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONFIG_SERVICE_URI=http://config-service:8111
    ports:
      - "8761:8761"
  authorization-service:
    container_name: "hayat_authorization_service"
    image: hayat_authorization_service:latest
    build:
      context: ./landscape/authorization
      dockerfile: Dockerfile
    restart: on-failure
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - SMS_ENV=${SMS_ENV}
      - SMS_USERNAME=${SMS_USERNAME}
      - SMS_PASSWORD=${SMS_PASSWORD}
      - SMS_SENDER=${SMS_SENDER}
      - SMS_LANGUAGE=${SMS_LANGUAGE}
      - KEYCLOAK_SERVICE_URL=http://keycloak:8181
      - EUREKA_URL=http://discovery-service:8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONFIG_SERVICE_URI=http://config-service:8111
    ports:
      - "8083:8083"
    depends_on:
      - db
      - redis
      - discovery-service
      - config-service
  donations-service:
    container_name: "hayat_donations_service"
    image: hayat_donations_service:latest
    build:
      context: ./services/donations
      dockerfile: Dockerfile
    restart: on-failure
    environment:
      - EUREKA_URL=http://discovery-service:8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONFIG_SERVICE_URI=http://config-service:8111
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    ports:
      - "8084:8084"
    depends_on:
      - db
      - redis
      - discovery-service
      - config-service
  needs-service:
    container_name: "hayat_needs_service"
    image: hayat_needs_service:latest
    build:
      context: ./services/needs
      dockerfile: Dockerfile
    restart: on-failure
    environment:
      - EUREKA_URL=http://discovery-service:8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONFIG_SERVICE_URI=http://config-service:8111
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    ports:
      - "8082:8082"
    depends_on:
      - db
      - redis
      - discovery-service
      - config-service
  shared-service:
    container_name: "hayat_shared_service"
    image: hayat_shared_service:latest
    build:
      context: ./services/shared
      dockerfile: Dockerfile
    restart: on-failure
    environment:
      - EUREKA_URL=http://discovery-service:8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONFIG_SERVICE_URI=http://config-service:8111
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    ports:
      - "8085:8085"
    depends_on:
      - db
      - redis
      - discovery-service
      - config-service
  redis:
    container_name: "hayat_redis"
    image: redis:latest
    ports:
      - "6379:6379"
  db:
    image: mysql:8.0
    container_name: "hayat_mysql"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - hayat_db:/var/lib/mysql
    ports:
      - "3306:3306"
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: "hayat_keycloak"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    command: [ "start-dev", "--http-port=8181" ]
    volumes:
      - hayat_keycloak:/var/lib/keycloak
    ports:
      - "8181:8080"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./platform/grafana/datasource.yml:/var/lib/grafana/datasource.yml

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./platform/prometheus:/etc/prometheus

volumes:
  hayat_db:
  hayat_keycloak:
  hayat_mongodb:
networks:
  hayat_internal:
    internal: true
  host:
    external: true
